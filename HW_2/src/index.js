/* 

1. 'number' + 23 + 32 
Result: 'number2332'
Explanation: Рядок та числа були об'єднані в один рядок за допомогою оператора +. Це сталося через те, що рядок розташований на початку виразу.

2. 41 + 1 + 'number'
Result: '42number'
Explanation: числа 41 та 1 спочатку складаються, отримуючи 42, а потім це число конкатенується з рядком 'number', формуючи рядок '42number'.

3. null + 1
Result: 1
Explanation: null конвертується в число 0, і воно додається до числа 1, що дає в результаті число 1.

4. 'five' + + 'two'
Result: "fiveNaN"
Explanation: +'two' спробує конвертувати рядок "two" в число, але воно не є числом, тому результатом є рядок "NaN", який конкатенується з "five".

5. 2 && 7
Result: 7
Explanation: Якщо обидва операнди є "істинними", то результатом виразу буде останній операнд. В цьому прикладі, обидва числа (2 і 7), є "true" (так як вони не дорівнюють нулю або не є пустими рядками).

6. +'40' + +'2';
Result: 42
Explanation: Унарний оператор + перед рядком спробує привести рядок '40' до числа. Якщо рядок містить цифри і може бути коректно приведений до числа, то приведення відбудеться.
+'2': Аналогічно, унарний оператор + перед рядком '2' спробує привести його до числа, і це також відбудеться, отримуючи число 2.

7. '10' - 5 === 6;
Result: false
Explanation: оператор - спробує перетворити рядок '10' у число. У рядку стоїть 10, тому 10 - 5 = 5. 
Далі, оператор === строго порівняє чи дорівнює 5 = 6? Відповідь ні. Тому false. 

8. true + false
Result: 1
Explanation: true конвертується в число 1. false конвертується в число 0. Це стандартне правило для автоматичного приведення типів в JavaScript

9. '4px' - 3 
Result: NaN
Explanation: JavaScript спробує конвертувати рядок для віднімання '4px' в число. '4px' не є числом, тому конвертація не виконається. 
Оскільки JavaScript не може виконати операцію віднімання між числом і рядком, результатом буде значення NaN (Not-a-Number).

10. '4' - 3
Result: 1
Explanation: Оператор '-' конвертує рядок '4' у число. 4 - 3 = 1

11. '2' + 3 ** 2;
Result: 29
Explanation: опеатор ** зводить у квадрат число 3. 3*3 = 9. В данному прикладі, оператор + стоїть між рядком та числом. 
Тому, об'єднує все в рядок.

12. 12 / '6'
Result: 2
Explanation: Рядок конвертується в число 6. 12 розділити на 6 дорівнює 2.

13. 23 + 42 + 'number'
Result: '65number'
Explanation: 23 + 42 = 65. Далі, 65 + рядок, конкатенується в одинт рядок '65number'.

14. '10' + (5 === 6);
Result: '10false' 
Explanation: (5 === 6) тут іде строге порівняння, чи дорівнює п'ять, шести?. Відповідь false. В рядку '10' стоїть число. 
Оператор + конвертує число та конкатенується з частиною в дужках. 

15. 'number' + 15 + 3
Result: 'number153'
Explanation: Оскільки 'number' є рядком, то операція + використовується для конкатенації: Спочатку 'number' об'єднується з числом 15, утворюючи рядок 'number15'.
Потім до цього рядка додається число 3, і результатом є рядок 'number153'.

*/